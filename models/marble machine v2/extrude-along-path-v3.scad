module track_poly(points, height, start_offset, end_offset) {
	polyhedron(
		points = [
			points[0] + [0, 0, height] + end_offset,
			points[1] + [0, 0, height] + end_offset,
			points[2] + [0, 0, height] + start_offset,
			points[3] + [0, 0, height] + start_offset,
			points[0] + end_offset,
			points[1] + end_offset,
			points[2] + start_offset,
			points[3] + start_offset
		],
		faces = [
			[0, 1, 2, 3],
			[7, 6, 5, 4],
			[1, 0, 4, 5],
			[2, 1, 5, 6],
			[3, 2, 6, 7],
			[0, 3, 7, 4]
		]
	);
}

module track_channel(offset, height,width, length, y_angle, z_angle, $fn = 15) {
	translate(v = offset)
	translate(v = [0, 0, height])
	rotate(a = z_angle, v = [0, 0, 1])
	rotate(a = y_angle - 90, v = [0, -1, 0])
	translate(v = [0, 0, -5])
	cylinder(
		d = width-2,
		h = length+10
	);
}

// points should consist of three vectors:
// - a point of context from the previous segment
// - a point starting the segment
// - a point ending the segment
module track_segment(points, height = 3, width = 5) {
	poly = [
		[0, width / 2],
		[0, -width / 2]
	];

	length = sqrt(
		pow(points[1][0] - points[2][0], 2)
		+ pow(points[1][1] - points[2][1], 2)
		+ pow(points[1][2] - points[2][2], 2)
	);

	z_angle = atan((points[2][1] - points[1][1]) / (points[2][0] - points[1][0]));
	z_angle_modifier = points[2][0] >= points[1][0] ? 0 : 180;

	previous_z_angle = atan((points[1][1] - points[0][1]) / (points[1][0] - points[0][0]));
	previous_z_angle_modifier =	points[1][0] >= points[0][0] ? 0 : 180;

	y_angle = asin((points[2][2] - points[1][2]) / length);

	assign(
		z_angle = z_angle + z_angle_modifier,
		previous_z_angle = previous_z_angle + previous_z_angle_modifier
	) {

		assign(
			poly_points = [
				[
					poly[0][0] * cos(z_angle)
						- poly[0][1] * sin(z_angle),
					poly[0][0] * sin(z_angle)
						+ poly[0][1] * cos(z_angle),
					0
				],
				[
					poly[1][0] * cos(z_angle)
						- poly[1][1] * sin(z_angle),
					poly[1][0] * sin(z_angle)
						+ poly[1][1] * cos(z_angle),
					0
				],
				[
					poly[1][0] * cos(previous_z_angle)
						- poly[1][1] * sin(previous_z_angle),
					poly[1][0] * sin(previous_z_angle)
						+ poly[1][1] * cos(previous_z_angle),
					0
				],
				[
					poly[0][0] * cos(previous_z_angle)
						- poly[0][1] * sin(previous_z_angle),
					poly[0][0] * sin(previous_z_angle)
						+ poly[0][1] * cos(previous_z_angle),
					0
				]
			]
		) {
			difference() {
				track_poly(
					points = poly_points,
					height = height,
					start_offset = points[1],
					end_offset = points[2]
				);

				track_channel(
					offset = points[1],
					height = height,
					width = width,
					length = length,
					y_angle = y_angle,
					z_angle = z_angle
				);
			}
		}
	}
}

module track(points) {
	for (i = [2:len(points)-1]) {
		color(rands(0, 1, 3))
		track_segment(
			points = [
				points[i-2],
				points[i-1],
				points[i]
			]
		);
	}
}

points = [
	[0.000000, 0.000000, 0.000000],
	[31.305800, -29.397320, 0.250000],
	[60.535720, -51.428570, 0.500000],
	[87.087060, -66.495530, 0.750000],
	[110.357150, -75.000000, 1.000000],
	[129.743310, -77.343750, 1.250000],
	[144.642860, -73.928580, 1.500000],
	[154.453130, -65.156260, 1.750000],
	[158.571430, -51.428580, 2.000000],
	[157.299110, -37.656250, 2.250000],
	[152.142860, -27.500000, 2.500000],
	[144.308040, -19.486610, 2.750000],
	[135.000000, -12.142860, 3.000000],
	[125.424110, -3.995540, 3.250000],
	[116.785720, 6.428570, 3.500000],
	[110.290180, 20.602680, 3.750000],
	[107.142860, 40.000000, 4.000000],
	[108.021760, 60.848210, 4.250000],
	[112.299110, 78.482140, 4.500000],
	[119.221550, 93.035710, 4.750000],
	[128.035720, 104.642850, 5.000000],
	[137.988290, 113.437490, 5.250000],
	[148.325900, 119.553570, 5.500000],
	[158.295200, 123.125000, 5.750000],
	[167.142860, 124.285710, 6.000000],
	[176.314170, 122.887830, 6.250000],
	[187.209820, 118.995530, 6.500000],
	[199.009490, 113.060820, 6.750000],
	[210.892860, 105.535710, 7.000000],
	[222.039620, 96.872210, 7.250000],
	[231.629470, 87.522320, 7.500000],
	[238.842080, 77.938060, 7.750000],
	[242.857150, 68.571430, 8.000000],
	[244.720990, 58.242190, 8.250000],
	[245.982150, 45.937500, 8.500000],
	[246.573670, 32.360490, 8.750000],
	[246.428580, 18.214280, 9.000000],
	[245.479920, 4.202010, 9.250000],
	[243.660720, -8.973220, 9.500000],
	[240.904020, -20.608260, 9.750000],
	[237.142860, -30.000000, 10.000000],
	[232.346540, -40.080920, 10.250000],
	[226.897320, -53.593750, 10.500000],
	[221.347650, -69.550780, 10.750000],
	[216.250000, -86.964290, 11.000000],
	[212.156810, -104.846540, 11.250000],
	[209.620540, -122.209830, 11.500000],
	[209.193640, -138.066410, 11.750000],
	[211.428580, -151.428580, 12.000000],
	[215.848220, -163.766750, 12.250000],
	[221.607150, -176.741080, 12.500000],
	[228.705360, -189.648450, 12.750000],
	[237.142860, -201.785720, 13.000000],
	[246.919650, -212.449780, 13.250000],
	[258.035720, -220.937500, 13.500000],
	[270.491080, -226.545760, 13.750000],
	[284.285720, -228.571430, 14.000000],
	[300.418540, -229.944200, 14.250000],
	[319.062510, -233.125000, 14.500000],
	[338.978800, -236.707590, 14.750000],
	[358.928580, -239.285720, 15.000000],
	[377.673000, -239.453130, 15.250000],
	[393.973220, -235.803580, 15.500000],
	[406.590410, -226.930810, 15.750000],
	[414.285720, -211.428580, 16.000000],
	[419.695870, -192.179140, 16.250000],
	[425.691970, -173.147330, 16.500000],
	[431.386730, -154.550780, 16.750000],
	[435.892860, -136.607150, 17.000000],
	[438.323100, -119.534050, 17.250000],
	[437.790180, -103.549110, 17.500000],
	[433.406810, -88.869980, 17.750000],
	[424.285720, -75.714290, 18.000000],
	[412.363290, -64.207600, 18.250000],
	[400.156260, -54.375010, 18.500000],
	[387.647890, -46.283490, 18.750000],
	[374.821430, -40.000010, 19.000000],
	[361.660160, -35.591530, 19.250000],
	[348.147330, -33.125000, 19.500000],
	[334.266190, -32.667410, 19.750000],
	[320.000010, -34.285720, 20.000000],
	[307.544650, -37.525120, 20.250000],
	[298.303580, -41.718760, 20.500000],
	[291.071440, -46.615520, 20.750000],
	[284.642870, -51.964290, 21.000000],
	[277.812510, -57.513960, 21.250000],
	[269.375010, -63.013400, 21.500000],
	[258.125010, -68.211500, 21.750000],
	[242.857150, -72.857150, 22.000000],
	[228.180810, -77.804130, 22.250000],
	[218.392860, -83.504470, 22.500000],
	[211.819200, -89.104360, 22.750000],
	[206.785720, -93.750010, 23.000000],
	[201.618310, -96.587620, 23.250000],
	[194.642860, -96.763400, 23.500000],
	[184.185270, -93.423560, 23.750000],
	[168.571430, -85.714290, 24.000000],
	[151.715960, -77.045200, 24.250000],
	[138.191970, -70.736610, 24.500000],
	[127.313060, -65.800780, 24.750000],
	[118.392860, -61.250000, 25.000000],
	[110.744980, -56.096540, 25.250000],
	[103.683040, -49.352680, 25.500000],
	[96.520650, -40.030690, 25.750000],
	[88.571430, -27.142860, 26.000000],
	[80.968190, -13.021770, 26.250000],
	[75.156250, -0.424110, 26.500000],
	[70.917970, 11.001670, 26.750000],
	[68.035720, 21.607140, 27.000000],
	[66.291860, 31.743860, 27.250000],
	[65.468750, 41.763390, 27.500000],
	[65.348780, 52.017300, 27.750000],
	[65.714290, 62.857140, 28.000000],
	[67.000560, 73.928570, 28.250000],
	[69.308040, 84.732140, 28.500000],
	[71.916860, 95.401780, 28.750000],
	[74.107150, 106.071430, 29.000000],
	[75.159050, 116.875000, 29.250000],
	[74.352680, 127.946430, 29.500000],
	[70.968200, 139.419640, 29.750000],
	[64.285720, 151.428570, 30.000000],
	[53.794650, 162.151220, 30.250000],
	[40.357150, 169.977680, 30.500000],
	[25.312510, 175.359930, 30.750000],
	[10.000010, 178.750000, 31.000000],
	[-4.241060, 180.599890, 31.250000],
	[-16.071420, 181.361610, 31.500000],
	[-24.151780, 181.487190, 31.750000],
];

track(points = points);